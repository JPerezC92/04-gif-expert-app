{"version":3,"sources":["components/AddCategory.js","components/GifGridItem.js","helpers/getGifs.js","hooks/useFetchGifs.js","components/CategoriesGrid.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","className","onSubmit","e","preventDefault","trim","length","state","type","value","onChange","target","placeholder","GifGridItem","title","url","src","alt","getGifs","category","a","encodeURI","fetch","resp","json","data","gifs","map","img","id","images","downsized_medium","useFetchGifs","loading","setState","useEffect","then","imgs","CategoriesGrid","GifExpertApp","defaultCategories","categories","index","reverse","ReactDOM","render","document","getElementById"],"mappings":"8RAuCeA,G,MAnCK,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAAoB,EACLC,mBAAS,IADJ,mBAClCC,EADkC,KACtBC,EADsB,KAgBzC,OACE,uBAAMC,UAAU,OAAOC,SAVJ,SAACC,GACpBA,EAAEC,iBAEEL,EAAWM,OAAOC,OAAS,IAC7BT,GAAc,SAACU,GAAD,4BAAeA,GAAf,CAAsBR,OACpCC,EAAc,MAKhB,UACE,mBAAGC,UAAU,mBAAb,SAAiCF,IADnC,OAGE,uBACEE,UAAU,cACVO,KAAK,OACLC,MAAOV,EACPW,SArBoB,SAACP,GACzBH,EAAcG,EAAEQ,OAAOF,QAqBnBG,YAAY,oB,QCXLC,G,MAdK,SAAC,GAAoB,IAAlBC,EAAiB,EAAjBA,MAAOC,EAAU,EAAVA,IAC5B,OACE,sBAAKd,UAAU,4DAAf,UACE,qBAAKA,UAAU,aAAae,IAAKD,EAAKE,IAAKH,IAC3C,oBAAIb,UAAU,aAAd,SAA4Ba,S,uBCRrBI,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DACfL,EADe,iDACiCM,UACpDF,GAFmB,+DAKFG,MAAMP,GALJ,cAKfQ,EALe,gBAMEA,EAAKC,OANP,uBAMbC,EANa,EAMbA,KACFC,EAAOD,EAAKE,KAAI,SAACC,GAAD,YAAU,CAC9BC,GAAID,EAAIC,GACRf,MAAOc,EAAId,MACXC,IAAG,UAAEa,EAAIE,cAAN,aAAE,EAAYC,iBAAiBhB,QAVf,kBAadW,GAbc,4CAAH,sDCiBLM,EAdM,SAACb,GAAc,IAAD,EACPrB,mBAAS,CACjC2B,KAAM,GACNQ,SAAS,IAHsB,mBAC1B1B,EAD0B,KACnB2B,EADmB,KAWjC,OALAC,qBAAU,WACRjB,EAAQC,GAAUiB,MAAK,SAACC,GACtBH,EAAS,CAAET,KAAMY,EAAMJ,SAAS,SAEjC,CAACd,IACGZ,GCmBM+B,G,MA5BQ,SAAC,GAAkB,IAAhBnB,EAAe,EAAfA,SAAe,EACLa,EAAab,GAAjCW,EADyB,EAC/BL,KAAcQ,EADiB,EACjBA,QAEtB,OACE,qBAAIhC,UAAU,mBAAd,UACE,oBAAIA,UAAU,oDAAd,SACGkB,IAGFc,GACC,mBAAGhC,UAAU,uEAAb,yBAKF,qBAAKA,UAAU,YAAf,SACG6B,EAAOH,KAAI,SAACC,GAAD,OACV,cAAC,EAAD,eAA8BA,GAAZA,EAAIC,cCSjBU,G,MA1BM,SAAC,GAAqC,IAAD,IAAlCC,yBAAkC,MAAd,CAAC,OAAa,IACpB1C,mBAAS0C,GADW,mBACjDC,EADiD,KACrC5C,EADqC,KAGxD,OACE,qCACE,yBAAQI,UAAU,SAAlB,UACE,oBAAIA,UAAU,gBAAd,0BAEA,cAAC,EAAD,CAAaJ,cAAeA,OAG9B,uBAEA,sBAAMI,UAAU,OAAhB,SACE,oBAAIA,UAAU,mBAAd,SACGwC,EACEd,KAAI,SAACR,EAAUuB,GAAX,OACH,cAAC,EAAD,CAAuCvB,SAAUA,GAA5BA,EAAWuB,MAEjCC,mBCnBbC,IAASC,OAAO,cAAC,EAAD,IAAkBC,SAASC,eAAe,W","file":"static/js/main.1f856c1c.chunk.js","sourcesContent":["import React, { useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport \"./AddCategory.css\";\n\nconst AddCategory = ({ setCategories }) => {\n  const [inputValue, setInputValue] = useState(\"\");\n\n  const handleInputChange = (e) => {\n    setInputValue(e.target.value);\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n\n    if (inputValue.trim().length > 2) {\n      setCategories((state) => [...state, inputValue]);\n      setInputValue(\"\");\n    }\n  };\n\n  return (\n    <form className=\"form\" onSubmit={handleSubmit}>\n      <p className=\"form__inputValue\">{inputValue}</p>\n      &nbsp;\n      <input\n        className=\"form__input\"\n        type=\"text\"\n        value={inputValue}\n        onChange={handleInputChange}\n        placeholder='Exp. \"cat\"'\n      />\n    </form>\n  );\n};\n\nAddCategory.propTypes = {\n  setCategories: PropTypes.func.isRequired,\n};\n\nexport default AddCategory;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport \"./GifGridItem.css\";\n\nconst GifGridItem = ({ title, url }) => {\n  return (\n    <div className=\"gif__item animate__animated animate__fadeIn animate__slow\">\n      <img className=\"gif__image\" src={url} alt={title} />\n      <h3 className=\"gif__title\">{title}</h3>\n    </div>\n  );\n};\n\nGifGridItem.propTypes = {\n  title: PropTypes.string.isRequired,\n  url: PropTypes.string.isRequired,\n};\n\nexport default GifGridItem;\n","export const getGifs = async (category) => {\n  const url = `https://api.giphy.com/v1/gifs/search?q=${encodeURI(\n    category\n  )}&limit=10&api_key=3JF9hiVnBIATwLSmXSnIjU1iOcI0ufnJ`;\n\n  const resp = await fetch(url);\n  const { data } = await resp.json();\n  const gifs = data.map((img) => ({\n    id: img.id,\n    title: img.title,\n    url: img.images?.downsized_medium.url,\n  }));\n\n  return gifs;\n};\n","import { useEffect, useState } from \"react\";\nimport { getGifs } from \"../helpers/getGifs\";\n\nconst useFetchGifs = (category) => {\n  const [state, setState] = useState({\n    data: [],\n    loading: true,\n  });\n\n  useEffect(() => {\n    getGifs(category).then((imgs) => {\n      setState({ data: imgs, loading: false });\n    });\n  }, [category]);\n  return state;\n};\n\nexport default useFetchGifs;\n","import PropTypes from \"prop-types\";\nimport GifGridItem from \"./GifGridItem\";\nimport useFetchGifs from \"../hooks/useFetchGifs\";\nimport \"./CategoriesGrid.css\";\n\nconst CategoriesGrid = ({ category }) => {\n  const { data: images, loading } = useFetchGifs(category);\n\n  return (\n    <li className=\"categories__item\">\n      <h3 className=\"category__title animate__animated animate__fadeIn\">\n        {category}\n      </h3>\n\n      {loading && (\n        <p className=\"category__loading animate__animated animate__flash animate__infinite\">\n          cargando...\n        </p>\n      )}\n\n      <div className=\"gif__grid\">\n        {images.map((img) => (\n          <GifGridItem key={img.id} {...img} />\n        ))}\n      </div>\n    </li>\n  );\n};\n\nCategoriesGrid.propTypes = {\n  category: PropTypes.string.isRequired,\n};\n\nexport default CategoriesGrid;\n","import React, { useState } from \"react\";\nimport AddCategory from \"./components/AddCategory\";\nimport CategoriesGrid from \"./components/CategoriesGrid\";\nimport \"./GifExpertApp.css\";\n\nconst GifExpertApp = ({ defaultCategories = [\"cat\"] }) => {\n  const [categories, setCategories] = useState(defaultCategories);\n\n  return (\n    <>\n      <header className=\"header\">\n        <h1 className=\"header__title\">GifExpertApp</h1>\n\n        <AddCategory setCategories={setCategories} />\n      </header>\n\n      <hr />\n\n      <main className=\"main\">\n        <ul className=\"categories__grid\">\n          {categories\n            .map((category, index) => (\n              <CategoriesGrid key={category + index} category={category} />\n            ))\n            .reverse()}\n        </ul>\n      </main>\n    </>\n  );\n};\n\nexport default GifExpertApp;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport GifExpertApp from \"./GifExpertApp\";\n\nReactDOM.render(<GifExpertApp />, document.getElementById(\"root\"));\n"],"sourceRoot":""}